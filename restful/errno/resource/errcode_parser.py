import json
import os
from cv2 import dft
import pandas


def generate_go(df: pandas.DataFrame, file: str):
    with open(os.path.expanduser(file), 'w') as f:
        f.write('''package errno

// generated by parser
const (
''')
        i_prev = 0
        for row in df.itertuples():
            i = int(row[1][1:])
            if i-i_prev > 1:
                f.write('\n')
            i_prev = i
            f.write(f'\t{row[4]} = "{row[1]}" // {row[2]}\t{row[3]}\n')
        f.write(')')


def generate_status_go(df: pandas.DataFrame, file: str):
    with open(os.path.expanduser(file), 'w') as f:
        f.write('''package errno

// generated by parser
var ErrorStatus = map[string]int{
''')
        i_prev = 0
        for row in df.itertuples():
            i = int(row[1][1:])
            if i-i_prev > 1:
                f.write('\n')
            i_prev = i
            f.write(f'\t{row[4]} : {row[5]},\n')
        f.write('}')


if __name__ == '__main__':
    df = pandas.read_csv('./errorcode.csv', sep=',', keep_default_na=False)
    generate_go(df, '../code.go')
    generate_status_go(df, '../status.go')

    # d = {}
    # for row in df.itertuples():
    #     status = 0
    #     if row[1].startswith('A'):
    #         status = 400
    #     if row[1].startswith('B') or row[1].startswith('C'):
    #         status = 500
    #     d[row[1]] = {'status': status, 'message': row[2]}
    #     # print(row[1])

    # with open(os.path.expanduser('~/Desktop/err.json'), 'w') as f:
    #     json.dump(d, f, ensure_ascii=False, indent=2)
